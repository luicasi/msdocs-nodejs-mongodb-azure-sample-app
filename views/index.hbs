<script type="text/javascript">
var app = (() => {
  function showPage(page) {
    $("div[page]").each((index, element) => {
      if ($(element).attr("page") != page){
        $(element).hide();
      }
    })
    $("div[page='" + page +"']").show();
  }

  function formatDate(d) 
  {
    var ret = "";
    var d2 = new Date(parseInt(d.substr(0, 4), 10), parseInt(d.substr(4, 2), 10) - 1, parseInt(d.substr(6, 2), 10), 0, 0, 0);
    
    return Date.Format(d2, "dddd dd/mm");		
  }

  return {
    showPage: showPage,
    formatDate: formatDate
  }

})();

var main = (() => {
  var page;
  var selectedDate = null;
  var displayAll = false;

  function init() {
    page = $("div[page=main]");

    $('input[name="view"]', page).checkboxpicker({
      offLabel:'da gestire',
      onLabel:'tutte',
      offTitle:false,
      onTitle:false,
    });

    $('input[name="view"]', page).on('change', function() {
      setDisplay($('input[name="view"]', page).prop('checked'))
    });

  }

  function setDisplay(all){
    displayAll = all;

    loadData(true);
  }

  function show(bLoadData) {
    if (bLoadData) {
      loadData(); 
    }
    else {
      app.showPage("main");
    }
  }

  async function loadData() 
  {	
    $.LoadingOverlay("show");

    const res = await fetch("/data/dates_list?" + new URLSearchParams({opt: displayAll ? 1 : 0}));

    $.LoadingOverlay("hide");

    if (!res.ok)
    {
      const text = await res.text();
      alert(text);
      return;
    }
    
    const retData = await res.json();
    if (!retData.success)
    {
      alert(retData.message);
      return;
    }

    var cnt = $("div[name=data-cnt]");
    clearContent(cnt);
    
    $.each(retData.data, function(index, item) {
      const div = createFromTemplate(cnt);
      div.data("data", item);
      $("span[name=data]", div).text(app.formatDate(item.date));

      // questi sono necessari per attivare la selezione dell'immagine cliccando sulla label
      $("label[name=bt1]", div).attr("for", "file" + index);
      $("input[name=file]", div).attr("id", "file" + index);

      $("input[name=file]", div).on("change", fileChange)
      $("label", div).on("click", onButtonClick);
      $(div).on("click", onDateClick);

      displayDate(div);
    });	
    
    app.showPage("main")
  }

  function displayDate(div)
  {
    const item = div.data("data");

    setVisible(div, displayAll || item.status == 0 || item.status == 1);

    if (item.status == 0){
      $("span[name=testo]", div).text("Nessuna immagine caricata");
    }
    else if (item.status == 1){
      $("span[name=testo]", div).text(`${item.openPictures} immagini da lavorare su ${item.totalPictures}`);
    }
    else if (item.status == 2){
      $("span[name=testo]", div).text(`Completato, ${item.totalPictures} immagini`);
    }
    else if (item.status == 3){
      $("span[name=testo]", div).text("Giorno non lavorativo");
    }
    else if (item.status == 4){
      $("span[name=testo]", div).text("Nessuna immagine");
    }

    setVisible($("label[name=bt1]", div).closest("div"), item.status == 0 || item.status == 1);
    setVisible($("label[name=bt2]", div).closest("div"), item.status == 1 || item.status == 2);
{{#if isAdmin}}
    setVisible($("label[name=bt5]", div).closest("div"), item.status == 1 && item.openPictures == 0);
    setVisible($("label[name=bt3]", div).closest("div"), item.status == 0);
    setVisible($("label[name=bt4]", div).closest("div"), item.status == 0);
{{/if}}
  }

  async function onButtonClick(event) {
    event.stopPropagation();

    const div = $(this).closest("div.data");
    const item = div.data("data");

    selectedDate = item;

    $(this).toggleClass("open");

    const name = $(this).attr("name");

    if (name == "bt1"){
      //
    }
    else if (name == "bt2"){
      pictures.show(selectedDate);
    }
{{#if isAdmin}}
    else if (name == "bt3" || name == "bt4" || name == "bt5"){
      updateDayStatus(name, div);
    }
{{/if}}
    else {
      alert(app.formatDate(item.date) + "\n" + $(this).text());
    }
  }

{{#if isAdmin}}
  async function updateDayStatus(cmd, div) {

    if (!confirm("Questa data non sarà più modificabile dopo l'operazione\nConfermi?"))
      return;

    var url;
    switch(cmd){
      case "bt3": url = "/data/add_not_working_day"; break;
      case "bt4": url = "/data/add_empty_day"; break;
      case "bt5": url = "/data/set_day_done"; break;
      default: throw new Error("invalid command"); break;
    }

    try
    {
      const item = div.data("data");

      const res = await fetch(url, {
        method:'POST',
        body: new URLSearchParams({ 'date': item.date })
      });
      if (!res.ok)
      {
        const text = await res.text();
        alert(text);
        return;
      }
      
      const data = await res.json();
      if (!data.success)
      {
        alert(data.message);
        return;
      }

      div.data("data", data.data);
      displayDate(div);

      return;           
    }
    catch (error)
    {
      alert(error.message);
    }
  }
{{/if}}

  function onDateClick() {
    if ($(this).is(".open"))
    {
      $(this).removeClass("open");
    }
    else {
      $("div.data.open", "div[page=main]").removeClass("open");
      $(this).toggleClass("open");
    }
  }

  async function fileChange(ev) 
  {
    $.LoadingOverlay("show");

    const form = new FormData();
    form.append("date", selectedDate.date);
    form.append("file", ev.target.files[0])

    try {
      const res = await fetch("data/add_picture", {
        method:'POST',
        body:form,
      });

      $.LoadingOverlay("hide");
      ev.target.value = "";

      if (res.ok) 
          pictures.show(selectedDate);
      else {
        const content = await res.text();
        alert(content);
      }      
    }
    catch (err) {
      $.LoadingOverlay("hide");
      alert(err);
    }
  }

  return {
    init: init,
    show: show
  }
})();

var pictures = (() => {

  var currentDate;
  var displayAll = false;
  var page;
  var picsContainer;
  var receivedData;

  function init() {
    page = $("div[page=pictures]");
    picsContainer = $("div[name=pictures-cnt]", page);

    $("a[name=home]", page).on("click", () => main.show(true))
    $("#file1").on("change", fileChange);

    $('input[name="view"]', page).checkboxpicker({
      offLabel:'da gestire',
      onLabel:'tutte',
      offTitle:false,
      onTitle:false,
    });

    $('input[name="view"]', page).on('change', function() {
      displayAll = $('input[name="view"]', page).prop('checked');
      displayPictures();
    });

  }

  function show(dt) {
    currentDate = dt;
    $("span[name=date]", page).text(app.formatDate(currentDate.date));
    $("label[name=upload]", page).hide();
    $("div[name=opt-view]", page).hide();

    loadData();
  }

  async function loadData() 
  {	
    const res = await fetch("/data/pictures_list?" + new URLSearchParams({date: currentDate.date}));
	
    if (!res.ok)
    {
      const text = await res.text();
      alert(text);
      return;
    }
    
    const retData = await res.json();
    if (!retData.success)
    {
      alert(retData.message);
      return;
    }

    receivedData = retData.data;

    const isEditable = retData.data.day.status == 0 || retData.data.day.status == 1;
    if (!isEditable) displayAll = true;

    //todo: pare che questo non abbia effetto, resta selezionato quello che lo era in precedenza
    $('input[name="view"]', page).prop('checked', displayAll);

    setVisible($("label[name=upload]", page), isEditable);
    setVisible($("div[name=opt-view]", page), isEditable);

    displayPictures();

    app.showPage("pictures")
  }

  function displayPictures() 
  {
    clearContent(picsContainer);
    
    $.each(receivedData.pictures, function(index, item) {
      appendItem(item);
    });	
  }

  function appendItem(data)
  {
      var i = createFromTemplate(picsContainer, true);
      i.data("data", data);
      displayItem(i);
      {{#if isAdmin}}
      $("button[name=done]", i).on("click", onDoneClick);    
      {{/if}}      
  }

  function displayItem(item)
  {
    var data = item.data("data");

    itemIsVisible = displayAll || data.status == 0;
    setVisible(item, itemIsVisible);

    if (itemIsVisible && $("img", item).attr("src") == undefined)
    {
        $("img", item).attr("src", `https://${receivedData.day.accountName}.blob.core.windows.net/${receivedData.day.containerName}/${data.name}`);
    }

    if (itemIsVisible){
{{#if isAdmin}}
      setVisible($("button[name=done]", item), data.status == 0);
{{/if}}  
{{#if isUser}}
      $("span[name=status]", item).text(data.status == 0 ? "non gestita" : "gestita");
{{/if}}  
    }
  }

  async function fileChange(ev) 
  {
    $.LoadingOverlay("show");

    const form = new FormData();
    form.append("date", currentDate.date);
    form.append("file", ev.target.files[0])

    try {
      const res = await fetch("data/add_picture", {
        method:'POST',
        body:form,
      });

      $.LoadingOverlay("hide");
      ev.target.value = "";

      if (res.ok) 
        appendItem(data.picture);
      else {
        const content = await res.text();
        alert(content);
      }      
    }
    catch (err) {
      $.LoadingOverlay("hide");
      alert(err);
    }
  }

{{#if isAdmin}}
  async function onDoneClick() {
    var item = $(this.closest(".item"));
    var data = item.data("data");

    try {
      const res = await fetch("/data/set_picture_done", {
        method:'POST',
        body:new URLSearchParams({
          'date': currentDate.date,
          'name': data.name
      })});

      if (!res.ok) {
        const content = await res.text();
        alert(content);
        return;
      }

      const content = await res.json();
      if (!content.success)
      {
        alert(content.message);
        return;
      }
    
      data.status = 1;
      displayItem(item);     

      //TODO: se non ci sono più immagini da gestire proporre all'utente di chiudere la giornata
      if (!anyOpenPicture()){
        if (confirm("Non ci sono più immagini da gestire. \nSi vuole chiudere la giornata?"))
        {
          const done = await setDayDone(item.date);
          if (done)
            main.show();
        }
      }
    }      
    catch (err){
       alert(err.message)
    }
  }

  async function setDayDone(date) {

    try
    {
      const item = div.data("data");

      const res = await fetch("/data/set_day_done", {
        method:'POST',
        body: new URLSearchParams({ 'date': date })
      });
      if (!res.ok)
      {
        const text = await res.text();
        alert(text);
        return false;
      }
      
      const data = await res.json();
      if (!data.success)
      {
        alert(data.message);
        return false;
      }

      return true;           
    }
    catch (error)
    {
      alert(error.message);
      return false;
    }
  }
{{/if}}  

  function anyOpenPicture() 
  {
    var found = false;
    $("div.item", picsContainer).each((index, item) => {
      var data = $(item).data("data");
      if (data.status == 1)
      {
        found = true;
        return false;
      }
    });
    return found;
  }

  return {
    init: init,
    show: show
  }
})();

$(function() {
  main.init();
  pictures.init();

  main.show(true);
});

</script>

<div page="main" style="margin: 2px; display: none; ">
  <div style="padding: 10px; ">
    <span style="font-size: 14pt; font-weight: bold; ">Date visualizzate&nbsp;&nbsp;</span>
    <input type="checkbox" id="opt-all" name="view">
  </div>
  <div name="data-cnt" style="display: flex; flex-wrap: wrap; justify-content: space-evenly; ">
    <div class="template data" style="flex-grow: 1.5; ">
      <span name="data" style="font-weight: bold; "></span>
      <br/>
      <span name="testo" style="font-style: italic; font-size: 10pt; "></span> 
      <br/>
      <div>
        <input type="file" name="file" id="file2" class="hiddeninputfile" accept="image/*"/>
        <label for="file2" class="button" name="bt1">Aggiungi una foto</label>
      </div>
      <div><label class="button" name="bt2">Visualizza le immagini</label><br/></div>
      {{#if isAdmin}}
      <div><label class="button" name="bt5">Giorno completato</label><br/></div>
      <div><label class="button" name="bt3">Giorno non lavorativo</label><br/></div>
      <div><label class="button" name="bt4">Nessuna immagine da caricare</label><br/>
       {{/if}}  
       </div>
    </div>
  </div>
</div>

<div page="pictures" style="margin: 10px; display: none; ">
  <span name="date" style="font-weight: bold; font-size: 12pt; "></span>
  <span>&nbsp;&nbsp; <a name="home" href="javascript: void(0);">[Home]</a></span>
  <span>&nbsp;&nbsp;<input type="file" name="file" id="file1" class="hiddeninputfile" accept="image/*"/>
  <label for="file1" class="link" name="upload">[Aggiungi una foto]</label></span>
  <hr/>
  <div name="opt-view" style="padding: 10px; ">
    <span style="font-size: 14pt; font-weight: bold; ">Immagini visualizzate&nbsp;&nbsp;</span>
    <input type="checkbox" id="opt-all" name="view">
  </div>
  <div name="pictures-cnt" style="text-align: center; ">
    <div class="template item">
      <img style="width:250px;">
      <br/>
      {{#if isAdmin}}
      <button name="done" style="font-weight: bold; font-size: 12pt; width:250px; padding: 5px; border-radius: 7px; background-color: #FFFFFF; ">Gestita</button>
      {{/if}}
      {{#if isUser}}
      <span name="status" style="font-weight: bold; font-size: 12pt; "></span>
      {{/if}}
      <br/>
      <br/>  
    </div>
  </div>
</div>
