<script type="text/javascript">
var currentDate;

var app = (() => {
  function showPage(page) {
    $("div[page]").each((index, element) => {
      if ($(element).attr("page") != page){
        $(element).hide();
      }
    })
    $("div[page='" + page +"']").show();
  }

  function formatDate(d) 
  {
    var ret = "";
    var d2 = new Date(parseInt(d.substr(0, 4), 10), parseInt(d.substr(4, 2), 10) - 1, parseInt(d.substr(6, 2), 10), 0, 0, 0);
    
    return Date.Format(d2, "dddd dd/mm");		
  }

  return {
    showPage: showPage,
    formatDate: formatDate
  }

})();

var main = (() => {
  function init() {

  }

  function show(bLoadData) {
    if (bLoadData) {
      loadData(); 
    }
    else {
      app.showPage("main");
    }
  }

  function loadData() 
  {	
    ajaxCall2("/data/dates_list", {}, loadDataCB);
  }

  function loadDataCB(sentData, retData) 
  {	
    var cnt = $("div[name=data-cnt]");
    clearContent(cnt);
    
    $.each(retData.data, function(index, item) {
      var i = createFromTemplate(cnt);
      i.data("data", item);
      $("span[name=data]", i).text(app.formatDate(item.date));
      if (item.status == 0){
        $("span[name=testo]", i).text("Nessuna immagine");
      }
      else if (item.status == 1){
        $("span[name=testo]", i).text(`${item.openPictures} immagini da lavorare su ${item.totalPictures}`);
      }
      setVisible($("label[name=bt1]", i).closest("div"), true);
      setVisible($("label[name=bt2]", i).closest("div"), item.status == 1);
      setVisible($("label[name=bt3]", i).closest("div"), item.status == 0);
      setVisible($("label[name=bt4]", i).closest("div"), item.status == 0);

      $("label", i).on("click", onButtonClick);
      $(i).on("click", onDateClick);
    });	
    
    app.showPage("main")
  }


  function onButtonClick() {
    var div = $(this).closest("div.data");
    var item = div.data("data");

    $(this).toggleClass("open");

    if ($(this).attr("name") == "bt1"){
      //showShoot(item.date);
    }
    else if ($(this).attr("name") == "bt2"){
      showPictures(item.date);
    }
    else {
      alert(app.formatDate(item.date) + "\n" + $(this).text());
    }
  }

  function onDateClick() {
    if ($(this).is(".open"))
    {
      $(this).removeClass("open");
    }
    else {
      $("div.data.open", "div[page=main]").removeClass("open");
      $(this).toggleClass("open");
    }
  }


  return {
    init: init,
    show: show
  }
})();

var pictures = (() => {

  var currentDate;
  var cnt;

  function init() {
    cnt = $("div[page=pictures]");

    $("a[name=home]", cnt).on("click", () => main.show(true))
    $("a[name=shoot]", cnt).on("click", () => shoot.show(currentDate))
    $("#file1").on("change", fileChange);
  }

  function show(dt) {
    currentDate = dt;
    $("span[name=date]", cnt).text(app.formatDate(currentDate));
    loadData();
  }

  function loadData() 
  {	
    ajaxCall2("/data/pictures_list", {date: currentDate}, loadDataCB);
  }

  function loadDataCB(sentData, retData) 
  {	
    var cntPics = $("div[name=pictures-cnt]", cnt);
    clearContent(cntPics);
    
    $.each(retData.data, function(index, item) {
      var i = createFromTemplate(cntPics);
      i.data("data", item);
      $("img", i).attr("src", `https://${item.accountName}.blob.core.windows.net/${item.containerName}/${item.name}`);

      $("button[name=done]", i).on("click", onDoneClick);
    });	
    
    app.showPage("pictures")
  }

  function fileChange(ev) 
  {
    const form = new FormData();
    form.append("date", currentDate);
    form.append("file", ev.target.files[0])
    fetch("data/add_picture", {
      method:'POST',
      body:form,
    }, )
    .then(res => {
        ev.target.value = "";
        if (res.ok) 
            loadData();
        else 
            alert(res.text());
        })
    .catch(err => alert(err))
  }

  function onDoneClick() {
    var item = $(this.closest(".item"));
    var data = item.data("data");

    fetch("/data/set_picture_done", {
      method:'POST',
      body:new URLSearchParams({
        'date': currentDate,
        'name': data.name
    })})
    .then(res => {
        if (res.ok) 
            item.remove();
        else 
            alert(res.text());
        })
    .catch(err => alert(err.message))
  }

  return {
    init: init,
    show: show
  }
})();

var shoot = (() => {

  var currentDate;
  var cnt;

  function init() {
    cnt = $("div[page=shoot]");

    $("a[name=home]", cnt).on("click", () => main.show(true))
    $("a[name=pictures]", cnt).on("click", () => pictures.show(currentDate))

    startup();
  }

  function show(dt) {
    currentDate = dt;
    $("span[name=date]", cnt).text(app.formatDate(currentDate));
    app.showPage("shoot");

    clearphoto();
    $("#shooting").show();
  }

    
  const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);
  const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);

  // We will scale the photo width to this.
  var width = vw - 50;
  // The height will be computed based on the input stream.
  var height = 0;

  var streaming = false;

  var video = null;
  var canvas = null;
  var photo = null;

  function startup() {
      video = document.getElementById('video');
      canvas = document.getElementById('canvas');
      photo = document.getElementById('photo');

      // Access the video stream from the webcam.
      navigator.mediaDevices.getUserMedia({
          video: {
              facingMode: 'environment'
          },
          audio: false
      })
      // Upon success, stream video in a video tag.
      .then(function(stream) {
          video.srcObject = stream;
          video.play();
      })
      .catch(function(err) {
          console.log("An error occurred: " + err);
      });

      video.addEventListener('canplay', function(ev) {
          if (!streaming) {
              height = video.videoHeight / (video.videoWidth / width);

              $("span[name=msg]").text(`video height: ${video.videoHeight}, video width: ${video.videoWidth}, doc height: ${vh}, doc width: ${vw}`);

              if (height > vh - 350){
                  height = vh - 350;
                  width = video.videoWidth / (video.videoHeight / height);
              }

              if (isNaN(height)) {
                  height = width / (4 / 3);
              }

              $(video).css('width', width);
              $(video).css('height', height);
              $(canvas).css('width', width);
              $(canvas).css('height', height);
              streaming = true;
          }
      }, false);

      $("#startbutton").on('click', function(ev) {
          takepicture();
      });

      $("#uploadpicture").on('click', function(ev) {
          canvas.toBlob(upload);
      });

      $("#shootagain").on('click', function(ev) {
          clearphoto();
          $("#uploading").fadeOut(() => $("#shooting").fadeIn());
      });

      clearphoto();

      $("#shooting").show();
  }
    
  function upload(blob) {
    const form = new FormData();
    form.append("date", currentDate);
    form.append("file", blob, "pic.png")
    fetch("data/add_picture", {
      method:'POST',
      body:form,
    }, )
    .then(res => {
        if (res.ok) 
            alert("Immagine salvata");
        else 
            alert(res.text());
        })
    .catch(err => alert(err))
  }	
			
  /*Collect the frames of the photo from the canvas and then
    convert it into a PNG format, so that it can be shown in
    the HTML page.*/
  function clearphoto() {
      var context = canvas.getContext('2d');
      context.fillStyle = "#AAA";
      context.fillRect(0, 0, canvas.width, canvas.height);

      var data = canvas.toDataURL('image/png');

      photo.setAttribute('src', data);
  }

  /*Capture a frame from the video stream.*/
  function takepicture() {
      var context = canvas.getContext('2d');
      if (width && height) {
          canvas.width = width;
          canvas.height = height;
          context.drawImage(video, 0, 0, width, height);

          /*toDataURL('image/png') returns a data URL containing a
            representation of the image in PNG format.*/
          var data = canvas.toDataURL('image/png');

          /*'src' is the name of the attribute whose value is to be set.
            'data' is a string containing the value to assign to the attribute.*/
          photo.setAttribute('src', data);
          $("#shooting").fadeOut(() => $("#uploading").fadeIn());
          
      } else {
          clearphoto();
      }
  }


  return {
    init: init,
    show: show
  }
})();

function showPictures(dt){
  pictures.show(dt);
}

function showShoot(dt){
  shoot.show(dt);
}

$(function() {
  main.init();
  pictures.init();
  //shoot.init();

  app.showPage("loading")

  main.show(true);
});

</script>

<div page="loading" style="text-align: center; padding: 20px; ">
  <h3>Avvio applicazione...</h3>
</div>

<div page="main">
  <div name="data-cnt" class="eventi" style="display: flex; flex-wrap: wrap; justify-content: space-evenly; ">
    <div class="template data" style="flex-grow: 1.5; ">
      <span name="data" style="font-weight: bold; "></span>
      <br/>
    <span name="testo" style="font-style: italic; font-size: 10pt; "></span> 
      <br/>
      <div>
      <span><input type="file" name="file" id="file2" class="hiddeninputfile" accept="image/*"/>
      <label for="file2" class="button" name="bt1">Aggiungi una foto</label></span>
      </div>
      <div><label class="button" name="bt2">Visualizza le immagini</label><br/></div>
      <div><label class="button" name="bt3">Giorno non lavorativo</label><br/></div>
      <div><label class="button" name="bt4">Nessuna immagine per questo giorno</label><br/></div>
    </div>
  </div>
</div>

<div page="pictures" style="margin: 10px; ">
  <span name="date" style="font-weight: bold; font-size: 12pt; "></span>
  <span>&nbsp;&nbsp; <a name="home" href="javascript: void(0);">[Home]</a></span>
  <span>&nbsp;&nbsp;<input type="file" name="file" id="file1" class="hiddeninputfile" accept="image/*"/>
  <label for="file1" class="link">[Aggiungi una foto]</label></span>
  <hr/>
  <div name="pictures-cnt" style="text-align: center; ">
    <div class="template item">
      <img style="width:250px;">
      <br/>
      <button name="done" style="font-weight: bold; font-size: 12pt; width:250px; padding: 5px; border-radius: 7px; background-color: #FFFFFF; ">Gestita</button>
      <br/><br/>
    </div>
  </div>
</div>

<div page="shoot" style="margin: 10px; ">
  <span name="date" style="font-weight: bold; font-size: 12pt; "></span> &nbsp;&nbsp; <a name="home" href="javascript: void(0);">[Home]</a> &nbsp;&nbsp; <a name="pictures" href="javascript: void(0);">[Immagini]</a>
  <hr/>
  <div id="shooting" style="display: none;">
      <div class="camera">
          <video id="video">Video stream not available.</video>
      </div>
      <div>
      <button id="startbutton">Scatta la foto</button>
      <br/>
      <span name="msg"></span>
      </div>
  </div>
  <canvas id="canvas" style="display: none; "></canvas>

  <div id="uploading" style="display: none;">
      <div class="output">
          <img id="photo" alt="The image captured will appear in this box.">
      </div>
      <br/>
      <button id="uploadpicture">Salva l'immagine</button>
      <button id="shootagain">Scatta un'altra foto</button>
  </div>
</div>